diff --git a/Main/Scripts/SaveAndLoad.gd b/Main/Scripts/SaveAndLoad.gd
index 96e236c..b3dba23 100644
--- a/Main/Scripts/SaveAndLoad.gd
+++ b/Main/Scripts/SaveAndLoad.gd
@@ -614,7 +614,9 @@ func save_backup(data: Dictionary, previous_path: String) -> void:
 
 func export_images(_images = get_tree().get_nodes_in_group("Sprites")):
 	#OS.get_executable_path().get_base_dir() + "/ExportedAssets" + "/" + str(randi())
-	var dire = OS.get_executable_path().get_base_dir() + "/ExportedAssets"
+	var dire = (
+			OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+		) + "/ExportedAssets"
 	if !DirAccess.dir_exists_absolute(dire):
 		DirAccess.make_dir_absolute(dire)
 		
diff --git a/Scripts/AutoLoads/Settings.gd b/Scripts/AutoLoads/Settings.gd
index c89d90d..8c1914e 100644
--- a/Scripts/AutoLoads/Settings.gd
+++ b/Scripts/AutoLoads/Settings.gd
@@ -29,7 +29,9 @@ const SAVED_LAYOUT_PATH := "user://layout.tres"
 	properties = 0,
 	layers = -100,
 	file_manager = 0,
-	lipsync_file_path = OS.get_executable_path().get_base_dir() + "/DefaultTraining.tres",
+	lipsync_file_path = (
+			OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+		) + "/DefaultTraining.tres",
 	microphone = null,
 	enable_trimmer = false,
 	save_raw_sprite = true, #save the original sprite even when trimmed
@@ -51,12 +53,20 @@ const SAVED_LAYOUT_PATH := "user://layout.tres"
 	language = "automatic",
 	save_unused_files = false,
 }
-var save_location = OS.get_executable_path().get_base_dir() + "/Preferences.pRDat" 
-var autosave_location = OS.get_executable_path().get_base_dir() + "/autosaves"
-var websocket_api = OS.get_executable_path().get_base_dir() + "/WebsocketDocumentation.txt"
-
-
-@onready var os_path = OS.get_executable_path().get_base_dir()
+var save_location = (
+		OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+	) + "/Preferences.pRDat" 
+var autosave_location = (
+		OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+	) + "/autosaves"
+var websocket_api = (
+		OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+	) + "/WebsocketDocumentation.txt"
+
+
+@onready var os_path = (
+		OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+	)
 
 var additional_output = RefCounted.new()
 
diff --git a/Scripts/UI/Menu/menu_screen_popup.gd b/Scripts/UI/Menu/menu_screen_popup.gd
index 1b4b02d..b008d60 100644
--- a/Scripts/UI/Menu/menu_screen_popup.gd
+++ b/Scripts/UI/Menu/menu_screen_popup.gd
@@ -55,13 +55,17 @@ func save_between_sessions():
 			SaveAndLoad.save_file(Settings.theme_settings.path)
 		else:
 			DirAccess.make_dir_absolute(Settings.os_path + "/AutoSaves")
-			SaveAndLoad.save_file(OS.get_executable_path().get_base_dir() + "/AutoSaves" + "/" + str(randi()))
+			SaveAndLoad.save_file((
+					OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+				) + "/AutoSaves" + "/" + str(randi()))
 	elif Settings.theme_settings.session == 1:
 		if FileAccess.file_exists(Settings.theme_settings.path):
 			SaveAndLoad.save_file(Settings.theme_settings.path)
 		else:
 			DirAccess.make_dir_absolute(Settings.os_path + "/AutoSaves")
-			SaveAndLoad.save_file(OS.get_executable_path().get_base_dir() + "/AutoSaves" + "/" + str(randi()))
+			SaveAndLoad.save_file((
+					OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+				) + "/AutoSaves" + "/" + str(randi()))
 
 
 
diff --git a/Scripts/UI/TopPanel/TopBarInput.gd b/Scripts/UI/TopPanel/TopBarInput.gd
index 4270692..53eea74 100644
--- a/Scripts/UI/TopPanel/TopBarInput.gd
+++ b/Scripts/UI/TopPanel/TopBarInput.gd
@@ -51,8 +51,12 @@ func update_window_button() -> void:
 		break
 
 func check_auto_saves():
-	if !DirAccess.dir_exists_absolute(OS.get_executable_path().get_base_dir() + "/autosaves"):
-		DirAccess.make_dir_absolute(OS.get_executable_path().get_base_dir() + "/autosaves")
+	if !DirAccess.dir_exists_absolute((
+				OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+			) + "/autosaves"):
+		DirAccess.make_dir_absolute((
+				OS.get_executable_path().get_base_dir() if not OS.has_feature("linux") else "user://"
+			) + "/autosaves")
 
 func choosing_edit(_id : int):
 	pass
